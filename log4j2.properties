##################################################

## Extra logging related to initialization of Log4j
## Set to debug or trace if log4j initialization is failing
monitorInterval = 5
name  =  Log4j2PropertiesConfig
status = error
#appenders = console, file
appenders = console, rolling

##################################################
property.MODULE_NAME = vca_line1
property.DIRECTORY_PATH = /home/appadmin/logs
property.LOG_FILE_NAME = ${MODULE_NAME}.log

property.LOG_PATTERN = %d{yyyy-MM-dd HH:mm:ss.SSS}{UTC} [${MODULE_NAME}] [%X{userType}] [%X{createdByBusinessId}] [%X{loggedEmployeeId}] [%tid] [%t] %-5level %logger{36} [%L] \u2013 %msg%n

##################################################

### LOGGING LEVELS ###
# ERROR < WARN < INFO < DEBUG < TRACE

### Root logger level 
rootLogger.level = INFO
rootLogger.appenderRefs = stdout, file


##################################################
### Configure for Console appender ###

## Type must be Console
appender.console.type = Console

## Name can be any
appender.console.name = LogToConsole

## Root logger referring to console appender
rootLogger.appenderRef.stdout.ref = LogToConsole

appender.console.layout.type = PatternLayout
appender.console.layout.pattern = ${LOG_PATTERN}



##################################################
### Configure for file appender ###

#appender.file.type = File
#appender.file.name = LogToFile

#appender.file.layout.type = PatternLayout
#appender.file.layout.pattern = ${LOG_PATTERN}

## Root logger referring to file appender
#rootLogger.appenderRef.file.ref = LogToFile

#appender.file.fileName = ${DIRECTORY_PATH}/${LOG_FILE_NAME}

##################################################
### Configure for rolling file appender ###

appender.rolling.type = RollingFile
appender.rolling.name = LogToRollingFile

appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = ${LOG_PATTERN}

appender.rolling.fileName = ${DIRECTORY_PATH}/${LOG_FILE_NAME}
appender.rolling.filePattern = ${DIRECTORY_PATH}/${MODULE_NAME}-%d{yyyy-MM-dd}-%i.log.gz
#appender.rolling.filePattern = ${DIRECTORY_PATH}/${MODULE_NAME}-%d{yyyy-MM-dd-hh-mm}-%i.log.gz

## Root logger referring to rolling file appender
#rootLogger.appenderRef.file.ref = LogToRollingFile
rootLogger.appenderRef.rolling.ref = LogToRollingFile



### Roll-Over Policies ###
appender.rolling.policies.type = Policies

appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 4

### SizeBasedTriggeringPolicy ###
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 50MB

### TimeBasedTriggeringPolicy ###
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true


### Delete old files ###
appender.rolling.strategy.action.type=Delete
appender.rolling.strategy.action.basePath=${DIRECTORY_PATH}
appender.rolling.strategy.action.maxDepth=4
appender.rolling.strategy.action.condition.type=IfFileName
appender.rolling.strategy.action.condition.glob=${MODULE_NAME}*.log.gz
appender.rolling.strategy.action.ifLastModified.type=IfLastModified
appender.rolling.strategy.action.ifLastModified.age=7d

##################################################


### You can provide multiple loggers in loggers as a comma separated list
### Then you can Specify different name and level for each logging class

### loggers are case sensitive and can't contain dots in name

loggers = springframework, springfox, kafka, sql, sqlBasicBinder

logger.springframework.name = org.springframework
logger.springframework.level = WARN

logger.springfox.name = springfox.documentation
logger.springfox.level = ERROR

logger.kafka.name = org.apache.kafka
logger.kafka.level = ERROR

logger.sql.name = org.hibernate.SQL
logger.sql.level = DEBUG

logger.sqlBasicBinder.name = org.hibernate.type.descriptor.sql.BasicBinder
logger.sqlBasicBinder.level = TRACE


##################################################

#customLevels = VCA, SAMPLE
customLevel.VCA = 350
#customLevel.SAMPLE = 250

